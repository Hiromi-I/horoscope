version: 2.1

executors:
  js-env:
    docker:
      - image: cimg/node:16.6.0

commands:
  restore_packages:
    steps:
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
  save_packages:
    steps:
      - save_cache:
          paths:
            - node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}

jobs:
  install-deps:
    executor: js-env
    working_directory: ~/app
    steps:
      - checkout
      - restore_packages
      - run:
          name: Install package
          command: npm install
      - save_packages
      - persist_to_workspace:
          root: ~/app
          paths:
            - node_modules/*
  test:
    executor: js-env
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run: 
          name: Execute test
          command: npm run test:unit
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - store_artifacts:
          path: coverage

  build-and-deploy:
    executor: js-env
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Build
          command: npm run build
      - add_ssh_keys:
          fingerprints: 
            - "${FINGERPRINT}"
      - run:
          name: Deploy
          command: scp -oStrictHostKeyChecking=no -r dist/* "${USER_NAME}@${HOST_NAME}:${APP_DIR}"

workflows:
  version: 2
  test:
    jobs:
      - install-deps:
          filters:
            branches:
              ignore: master
      - test:
          requires:
            - install-deps
  deploy:
    jobs:
      - install-deps:
          filters:
            branches:
              only: master
      - build-and-deploy:
          requires:
            - install-deps